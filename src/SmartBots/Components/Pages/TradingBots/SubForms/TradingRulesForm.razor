@using SmartBots.Application.Features.TradingBots
@using SmartBots.Domain.Entities
@using SmartBots.Domain.Entities.IndicatorRules

<div class="row">
    <!-- Dropdown for selecting the type of trading rule -->
    <div class="col-12 mb-4">
        <h5>Add Trading Rule</h5>
        <div class="mb-2">
            <select @bind="selectedRuleType" class="form-select form-select-sm">
                <option value="" disabled selected>Select Rule Type</option>
                <option value="@nameof(BollingerBandsRule)">Bollinger Bands</option>
                <option value="@nameof(MACDRule)">MACD</option>
                <option value="@nameof(RSIRule)">RSI</option>
            </select>
        </div>
        <div>
            <button type="button" class="btn btn-outline-primary btn-sm" @onclick="AddTradingRule">
                <i class="bi bi-plus"></i> Add Rule
            </button>
        </div>
    </div>

    <div class="col-12 mb-4">
        <h5>Trading Rules</h5>
        <div class="row">
            @foreach (var rule in TradingRules)
            {
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">

                            @if (rule is BollingerBandsRule bollingerRule)
                            {
                                <BollingerBandsRuleForm Rule="bollingerRule" />
                            }
                            else if (rule is MACDRule macdRule)
                            {
                                <MACDRuleForm Rule="macdRule" />
                            }
                            else if (rule is RSIRule rsiRule)
                            {
                                <RSIRuleForm Rule="rsiRule" />
                            }

                            <button type="button" class="btn btn-danger btn-sm" @onclick="@(() => RemoveRule(rule))">Delete</button>

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public List<TradingRule> TradingRules { get; set; } = new();
    private string? selectedRuleType;

    private void AddTradingRule()
    {
        TradingRule? newRule = selectedRuleType switch
        {
            nameof(BollingerBandsRule) => new BollingerBandsRule { Period = 20, StandardDeviation = 2.0 },
            nameof(MACDRule) => new MACDRule { FastPeriod = 12, SlowPeriod = 26, SignalLinePeriod = 9 },
            nameof(RSIRule) => new RSIRule { Period = 14, OverboughtThreshold = 70, OversoldThreshold = 30 },
            _ => null
        };

        if (newRule != null)
        {
            TradingRules.Add(newRule);
        }
    }

    private void RemoveRule(TradingRule rule) => TradingRules.Remove(rule);
}
